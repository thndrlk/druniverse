
=================================
Status: Complete
=================================

Installing Gentoo on Pentium N4200 without Binaries.

  I'm making this guide for myself, 
but feel free to read it.

==============================
Install Method : Minimal
Init Choice : OpenRC
Duration: 4 hours, 58 minutes
==============================

0.1 - Network

Using `wpa_supplicant`
  - wpa_supplicant -B -i interface -c <(wpa_passphrase MYSSID PASSWORD)

Test Network
  ping -c 5 1.1.1.1

0.2 - Disk

Using fdisk

Deleting partitions, 
  making new ones, assign, 
    format and mount

  Needs:
    efi  # /boot/efi, 1G or 1024MB
    swap # RAM * 2
    root # / , whole disk
    
  - fdisk /dev/sdX  
        # X = equivalent of the main disk partition
  - p  # list partitions
  - d  # delete partitions
  - g  # create disk in gpt partition
  - n  # create new partition
  - t  # partition type
    (1 for efi system, 19 for swap)
  - w  # write changes, formats disk with new partition

Format efi partition 
  - mkfs.fat -F 32 /dev/sdX1 

Activate swap partition
  - mkswap /dev/sdX2
  - swapon /dev/sdX2

Assign filesystem on root partition
  - mkfs.ext4 /dev/sdX3  
      # could also use xfs, btrfs, etc.

Mount the root partition
  - mkdir --parents /mnt/gentoo
  - mount /dev/sdX3 /mnt/gentoo

Create efi directory on `/mnt/gentoo`
  - mkdir --parents /mnt/gentoo/efi

0.3 - Stage File, Configuring Compile Options

Change directory
  - cd /mnt/gentoo

Check date with "date"
  - date MMDDhhmmYYYY   
      # in 24h format, only change if date is not accurate

Grab stage file 
  - links https://www.gentoo.org/downloads/mirrors/  
      # stage3 openrc desktop profile

Extract stage file
  - tar xpvf stage3-*.tar.xz --xattrs-include='*.*' --numeric-owner -C /mnt/gentoo

Compile Options
  - nano /etc/portage/make.conf
    COMMON_FLAGS="-march=native -02 -pipe"
    RUSTFLAGS="-C target-cpu=native"
    MAKEOPTS="-jX -lY"  # ram & threads
    PORTAGE_NICENESS="19"
    PORTAGE_IONICE_COMMAND="ionice -c 3 -p \${PID}"

0.4 - Chroot, Install Base System, Configure Portage

Copy DNS
  - cp --dereference /etc/resolv.conf /mnt/gentoo/etc/

Generate fstab before chrooting
  - genfstab /mnt/gentoo > /mnt/gentoo/etc/fstab

Chroot
  - mount --types proc /proc /mnt/gentoo/proc
  - mount --rbind /sys /mnt/gentoo/sys
  - mount --make-rslave /mnt/gentoo/sys
  - mount --rbind /dev /mnt/gentoo/dev
  - mount --make-rslave /mnt/gentoo/dev
  - mount --bind /run /mnt/gentoo/run
  - mount --make-slave /mnt/gentoo/run
  - chroot /mnt/gentoo /bin/bash
  - source /etc/profile
  - export PS1="(chroot) ${PS1}"  

Prepare Bootloader
  - mount /dev/sdX1 /efi

Fetch snapshot from Gentoo Mirrors
  - emerge-webrsync

Select Mirrors
  - emerge -av1 app-portage/mirrorselect  # --ask --verbose --oneshot
  - mirrorselect -i -o >> /etc/portage/make.conf

Add CPU_FLAGS_*
  - emerge -av1 app-portage/cpuid2cpuflags
  - echo "*/* $(cpuid2cpuflags)" > /etc/portage/package.use/00cpu-flags

Add VIDEO_CARDS
  - nano /etc/portage/make.conf
  - VIDEO_CARDS="intel"

  # Upon checking, settings used from Line 83 
    was removed, had to re-add again.

Add packages with license
  - mkdir /etc/portage/package.license
  - nano /etc/portage/package.license/kernel  
    sys-kernel/linux-firmware linux-fw-redistributable
    sys-firmware/intel-microcode intel-ucode

Updating `@world`
  - emerge -avuDN @world  # emerge --ask --verbose --update --deep --changed-use @world

Set Timezone
  - ln -sf ../usr/share/zoneinfo/Asia/Manila /etc/localtime  
        # Continent & Country Capital

Setup Locale
  - nano /etc/locale.gen
    en_US.UTF-8 UTF-8 
  - locale-gen

Select Locale
  - eselect locale list
  - eselect locale set X 
    # Line 143

Reload Environment
  - env-update && source /etc/profile && export PS1="(chroot) ${PS1}"

0.5 - Configuring Kernel  

Install Linux Firmware
  - emerge --ask sys-kernel/linux-firmware  # or emerge -av

Install SOF (Sound Open Firmware)
  - emerge --ask sys-firmware/sof-firmware 

Install Intel Microcode
  - emerge --ask sys-firmware/intel-microcode

Add GRUB Bootloader, Initramfs
  - nano /etc/portage/package.use/installkernel
    sys-kernel/installkernel dracut grub

Add EFI support
  - echo 'GRUB_PLATFORMS="efi-64"' >> /etc/portage/make.conf

Install "installkernel"
  - emerge --ask sys-kernel/installkernel

Installing Kernel
  - emerge --ask sys-kernel/gentoo-kernel-bin

Clean up
  - emerge --depclean  # could add `--pretend` before `--depclean`

Post-Install
  - nano /etc/portage/make.conf
    USE="dist-kernel"

0.6 - Networking & System Information

Hostname
  - echo (hostname) > /etc/hostname  # could be any

Host File
  - nano /etc/hosts
    127.0.0.1     hostname.homenetwork hostname localhost

Set root password
  - passwd  # will not echo

0.8 - System Tools

    # Optional, but better if installed.

Install:
  System Logger
  Cron Daemon
  File Indexing
  Shell Completion
  Time Synchronization

  - emerge --ask --verbose app-admin/sysklogd sys-process/cronie 
sys-apps/mlocate app-shells/bash-completion net-misc/chrony

Enable services
  - rc-update add sysklogd default
  - rc-update add cronie default
  - rc-update add chronyd default

0.9 - Networking Tools

Add Network Manager and "tkip" USE flag
  - nano /etc/portage/make.conf
    USE="${USE} networkmanager tkip"

Update System after adding a USE flag
  - emerge --ask --changed-use --deep @world

Install Network Manager, `wpa_supplicant`
  - emerge --ask net-misc/networkmanager net-wireless/wpa_supplicant

1.0 - GRUB Bootloader

Install GRUB on system
  - grub-install --efi-directory=/efi

Let GRUB build a config file
  - grub-mkconfig -o /boot/grub/grub.cfg

=====
Final

Double-check fstab
  - cat /etc/fstab

Exit chroot
  - exit

Unmount mounted partitions and reboot
  - cd
  - umount -l /mnt/gentoo/dev{/shm,/pts,}
  - umount -R /mnt/gentoo
  - reboot

            # REFERENCES #
https://wiki.gentoo.org/wiki/Handbook:AMD64
https://wiki.gentoo.org/wiki/Portage_niceness
https://wiki.gentoo.org/wiki/NetworkManager
https://wiki.archlinux.org/title/Wpa_supplicant

=========================================================================
Thanks to @hpsaucii from Debian Community in Discord for helping me on this.

  This was such a fun experience to do, If you want to try out Gentoo, 
prepare a lot of time and patience as this takes really long to install.
I highly recommend the handbook, huge thanks to the Gentoo Community
for making such an awesome documentation.
  - Thunderlake.
==========================================================================
